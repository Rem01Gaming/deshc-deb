#!/bin/env bash

show_usage_deshc() {
	cat <<"EOF"
deshc - decrypt SHC and SSC encrypted shell script
  usage: deshc [-shc | -ssc] [OPTIONS] encrypted1 encrypted2

    Options:
      -p          Copy binary to $PATH before decrypting it,
                  Solution for certain devices that chmod
                  doesn't working properly like OnePlus/Realme/Oppo.
      -t DECIMAL  Specify the amount time on second for waiting
                  execve call. default 0.03 second for shc
                  and 0.015 for ssc.

    Examples:
      deshc -shc encrypted1 encrypted2
      deshc -ssc -t 0.01 encrypted1 encrypted2
      deshc -shc -p encrypted1 encrypted2
      deshc -ssc -p -t 0.018 encrypted1 encrypted2
EOF
}

case $1 in
-shc) ENCRYPTION_TYPE="SHC" ;;
-ssc) ENCRYPTION_TYPE="SSC" ;;
*)
	show_usage_deshc
	echo -e "\n\nerror: the following arguments are required: -shc/-ssc"
	exit 1
	;;
esac
shift

if [[ "$1" == "-p" ]]; then
	COPY_TO_PATH="1"
	shift
fi

if [[ "$1" == "-t" ]]; then
	CUSTOM_DELAY_EXECVE=$2
	shift
	shift
fi

if [ -z "$@" ]; then
	show_usage_deshc
	echo -e "\n\nnotice: no target binary to decrypt"
	exit 0
fi

for arg in $@; do
	if [ -f $arg ]; then
		filename="${arg%.*}"
		echo "Decrypting $arg â†’ $filename.dec.sh"

		if [ $COPY_TO_PATH -eq 1 ]; then
			if [ -x $PATH/$arg ]; then
				echo "error: same named binary have been found in $PATH, aborting to prevent futher damage."
				exit 1
			else
				cp $arg $PATH
				chmod +x $PATH/$arg
			fi
		else
			chmod +x ./$arg
		fi

		$arg >/dev/null 2>&1 &
		child=$!
		if [ -z $CUSTOM_DELAY_EXECVE ]; then
			if [[ $ENCRYPTION_TYPE == "SHC" ]]; then
				sleep 0.03
			else
				sleep 0.015
			fi
		else
			sleep $CUSTOM_DELAY_EXECVE
		fi
		kill -STOP $child
		if [[ $ENCRYPTION_TYPE == "SHC" ]]; then
			cat /proc/$child/cmdline | sed 's/.*\(#!\)/\1/; $d' >$filename.dec.sh
		else
			cat /proc/$child/fd/3 >$filename.dec.sh
		fi
		kill -TERM $child

		if [ $COPY_TO_PATH -eq 1 ]; then
			rm -f $PATH/$arg
		fi
		if [[ $(file $filename.dec.sh) != *script* ]]; then
			echo "notice: $filename.dec.sh maybe empty or truncated."
		fi
	else
		echo "file $arg not found."
	fi
done
